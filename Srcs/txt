Votre shell doit encore faire:



BUG REPORT
- export sans ARG
- STATUS en global a faire

BUG a test:
- Le parsing les bons char en sepparateurs de mots, nom de var, etc



Fait:
◦ << doit recevoir un délimiteur et lire l’input donné jusqu’à rencontrer une ligne
contenant le délimiteur. Cependant, l’historique n’a pas à être mis à jour !
◦ >> doit rediriger la sortie en mode append.
◦ ctrl-C affiche un nouveau prompt sur une nouvelle ligne.
◦ ctrl-D quitte le shell.
◦ ctrl-\ ne fait rien.
• Gérer ctrl-C, ctrl-D et ctrl-\ qui doivent fonctionner comme dans bash.
• Afficher un prompt en l’attente d’une nouvelle commande.
• Posséder un historique fonctionnel.
• Chercher et lancer le bon exécutable (en se basant sur la variable d’environnement
PATH, ou sur un chemin relatif ou absolu).
• Ne pas interpréter de quotes (guillemets) non fermés ou de caractères spéciaux non
demandés dans le sujet, tels que \ (le backslash) ou ; (le point-virgule).
• Gérer ’ (single quote) qui doit empêcher le shell d’interpréter les méta-caractères
présents dans la séquence entre guillemets.
• Gérer "" (double quote) qui doit empêcher le shell d’interpréter les méta-caractères
présents dans la séquence entre guillemets sauf le $ (signe dollar).
4
Minishell Aussi mignon qu’un vrai shell
• Implémenter les redirections :
◦ < doit rediriger l’entrée.
◦ > doit rediriger la sortie.
• Implémenter les pipes (caractère |). La sortie de chaque commande de la pipeline
est connectée à l’entrée de la commande suivante grâce à un pipe.
• Gérer les variables d’environnement (un $ suivi d’une séquence de caractères)
qui doivent être substituées par leur contenu.
• Gérer $? qui doit être substitué par le statut de sortie de la dernière pipeline
exécutée au premier plan.
• Votre shell doit implémenter les builtins suivantes :
◦ echo et l’option -n
◦ cd uniquement avec un chemin relatif ou absolu
◦ pwd sans aucune option
◦ export sans aucune option
◦ unset sans aucune option
◦ env sans aucune option ni argument
◦ exit sans aucune option




checker si supr tout environ

$?



$ < << > >> 
cat << EOF




commande << str | commande > file

Structures qui contient info sur elements du term :
type
Position
Contenu

Split commande met dans une l_chaine

chaine de char = " "
des varianles d env = $

parcourir string,
					si venv -> couper 1er mots puis ajouter mot de la venv
					si squotes -> mettre prochaim mots
					si dquotes -> faire mot + mots par venv

REMPLACER ' ' par les is_space

erreur:

cat Makefile | wc > pop
les multis redi




des commandes = for_access renvoie le path
des fichiers
des dossier
redirections = < << > >>



char    **argv;
char    **environ;
char    *path_to_command;
char	*input;
char	*output;

letters"quotes"letters$VENV.letters 


MOT mot "lapon" 'lapin' >ICI <OULA


